#+TITLE: AstroSim

* About
AstroSim is a fledgling astronomical simulation program written in C++.
* Roadmap
** DONE Basic Backend [5/5]
- [X] 1d motion, SFML setup
- [X] 2d motion, polar coordinates
- [X] Forces, gravity
- [X] Renderer class that manages scene
- [X] Bugfix: Inconsistent Forces
  - [X] Complete code rewrite
  - [X] Switch to linked lists
  - [X] Bugfix: Fix gravity
** TODO Orbital Estimation [0/3]
*Potential roadblock, math is quite challenging.*
- [-] 2-body estimation
  - [X] Research Kepler's Laws and orbital approximation
  - [ ] Understand Kepler Problem
  - [ ] Add orbital elements
  - [ ] Implement approximation techniques
- [ ] SFML Ellipses
- [ ] N-body approximations
  - [ ] Perturbation Theory
** TODO Usability Improvements [0/2]
- [ ] Renderer manages more things
- [ ] GUI
  - [ ] Addition/removal of planets from gui
  - [ ] Can be operated without touching code
- [ ] Easier interface/modification outside of GUI.
** TODO Star Modelling [0/4]
- [ ] Solar Mass Stars
  - [ ] Main Sequence
  - [ ] Post-Main Sequence
  - [ ] Asymptotic Red Giant Branch
  - [ ] Star Death
- [ ] Graphics
- [ ] Larger Stars
  - [ ] Adjustments to Solar Mass sequence
  - [ ] Neutron Stars
  - [ ] Black Holes
- [ ] Smaller Stars
  - [ ] Adjustments to Solar Mass sequence
** TODO Collisions [0/5]
- [ ] Improved forces
- [ ] Basic "absorption" collision
- [ ] Fragmentation of planets
  - [ ] Research physics
  - [ ] Implement said physics
- [ ] Dynamic collisions (star-planet different from planet-planet)
- [ ] Improve fragmentation to include dust
** TODO Planets [0/3]
- [ ] Plan out planets more
- [ ] Material
- [ ] Atmospheres
** TODO Dust and Formation [0/4]
- [ ] Add Dust class
  - [ ] Devise method of efficiently simulating large numbers of particles
  - [ ] Implement algorithm
- [ ] Graphics
- [ ] Nebulae
  - [ ] Stellar nebulae
  - [ ] Planetary nebulae
- [ ] Integrate into models, replacement
** TODO Graphics [0/4]
- [ ] Look into alternative graphics libraries
- [ ] 3d motion
- [ ] 3d approximation in 2d
- [ ] Actual 3d graphics
** TODO Efficiency [0/4]
- [ ] High-Level Optimizations
  - [ ] Switch to vectors
  - [ ] Improve time complexity of algorithms
- [ ] Branch Prediction Improvements
- [ ] Cache Optimization
- [ ] Multithreading
** TODO Documentation [/]
** TODO Relativity [/]
